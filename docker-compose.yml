version: "3.9"
services:
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: campuswell
      MYSQL_USER: campus
      MYSQL_PASSWORD: campus
    ports: ["3306:3306"]
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  sports-svc:
    build: ./sports-svc
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    ports: ["8082:8082"]

  aggregator-svc:
    build: ./aggregator-svc
    environment:
      - PSYCH_BASE=${PSYCH_BASE:-http://psych-svc:8081}
      - SPORTS_BASE=${SPORTS_BASE:-http://sports-svc:8082}
      - HABITS_BASE=${HABITS_BASE:-http://habits-svc:8083}
      - JWT_SECRET=${JWT_SECRET:-devsecret}
    ports: [ "8080:8080" ]

  analytics-svc:
    build: ./analytics-svc
    environment:
      - AWS_REGION=${AWS_REGION}
      - ATHENA_DB=${ATHENA_DB}
      - ATHENA_OUTPUT=${ATHENA_OUTPUT}
    ports: [ "8084:8084" ]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: campuswell
      POSTGRES_USER: campus
      POSTGRES_PASSWORD: campus
    ports: ["5434:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U campus -d campuswell"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  psych-svc:
    build: ./psych-svc
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-campuswell}
      - POSTGRES_USER=${POSTGRES_USER:-campus}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-campus}
      - SEED_PSYCH=${SEED_PSYCH:-true}
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8081:8081"]

  habits-svc:
    build: ./habits-svc
    environment:
      - MONGODB_URI=mongodb://mongo:27017/campuswell
    depends_on:
      - mongo
    ports: ["8083:8083"]

  mongo:
    image: mongo:7
    ports: ["27017:27017"]
    volumes:
      - mongo_data:/data/db

volumes:
  mysql_data:
  mongo_data:
  postgres_data: